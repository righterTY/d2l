Search.setIndex({"docnames": ["defectdetector", "defectdetector.camera", "defectdetector.controller", "defectdetector.detector", "defectdetector.detector.yolox", "defectdetector.logger", "defectdetector.transforms", "defectdetector.utils", "index", "modules"], "filenames": ["defectdetector.rst", "defectdetector.camera.rst", "defectdetector.controller.rst", "defectdetector.detector.rst", "defectdetector.detector.yolox.rst", "defectdetector.logger.rst", "defectdetector.transforms.rst", "defectdetector.utils.rst", "index.rst", "modules.rst"], "titles": ["defectdetector package", "defectdetector.camera package", "defectdetector.controller package", "defectdetector.detector package", "defectdetector.detector.yolox package", "defectdetector.logger package", "defectdetector.transforms package", "defectdetector.utils package", "Welcome to Polarization_Defect_Detection's documentation!", "Polarization-Defect-Detection"], "terms": {"camera": [0, 2, 8, 9], "submodul": [0, 8, 9], "triggertyp": [0, 1], "captur": [0, 1], "get_fp": [0, 1], "get_node_map": [0, 1], "grab_next_image_by_trigg": [0, 1, 2], "reset_trigg": [0, 1], "set_acquisit": [0, 1], "set_buff": [0, 1], "set_nod": [0, 1], "set_pixel_format": [0, 1], "set_trigg": [0, 1], "setup_cap": [0, 1], "staticmetaobject": [0, 1, 2], "stop": [0, 1, 2], "nodemap": [0, 8, 9], "get_category_node_and_all_featur": [0, 1], "get_enumeration_node_and_current_entri": [0, 1], "get_node_info": [0, 1], "get_whole_nodemap": [0, 1], "control": [0, 1, 8, 9], "buffer": [0, 1, 2], "data_list": [0, 2], "pop": [0, 2], "push": [0, 2], "get_cam": [0, 2], "get_fram": [0, 2], "get_interface_model": [0, 2], "select_camera": [0, 2], "update_fram": [0, 2], "enumr": [0, 8, 9], "enumer": [0, 1, 2], "call_interfac": [0, 2], "create_camera_inst": [0, 2], "get_cam_nam": [0, 2], "get_interface_info": [0, 2], "query_interfac": [0, 2], "pipelin": [0, 8, 9], "add": [0, 2, 3, 4], "remov": [0, 2], "run": [0, 2], "setup": [0, 1, 2], "detector": [0, 8, 9], "yolox": [0, 3, 8], "infer": [0, 3, 8], "base": [0, 1, 2, 4, 5, 8, 9], "detect": [0, 2, 3, 4], "yoloxdetector": [0, 3, 4], "model": [0, 3, 4], "confid": [0, 3, 4], "nm": [0, 3, 4], "class": [0, 1, 2, 3, 4, 5, 6], "backend": [0, 3, 4], "target": [0, 1, 2, 3, 4], "model_net": [0, 3, 4], "letterbox": [0, 3, 4], "paint_chinese_opencv": [0, 3, 4], "unletterbox": [0, 3, 4], "vi": [0, 3, 4], "logger": [0, 2, 8, 9], "detect_statist": [0, 8, 9], "baseloghandl": [0, 5], "emit": [0, 5], "detectformatt": [0, 5], "format": [0, 1, 5], "time_format": [0, 5], "translat": [0, 5], "record_buff": [0, 8, 9], "transform": [0, 8, 9], "basetransform": [0, 2, 6], "demosaick": [0, 8, 9], "resiz": [0, 8, 9], "convertcolorspac": [0, 6], "method": [0, 2, 6], "util": [0, 8, 9], "load_config": [0, 8, 9], "save_config": [0, 7], "manag": [0, 2, 8, 9], "singleton": [0, 7], "config": [1, 7], "str": [1, 2, 3, 4, 7], "save": [1, 2], "fals": [1, 2], "trigger": [1, 2], "int": [1, 3, 4], "0": [1, 3, 4], "softwar": 1, "hardwar": 1, "get": [1, 2, 3, 4], "an": [1, 2, 3, 4], "imag": [1, 2, 3, 4], "from": [1, 2, 4], "your": 1, "current": [1, 2], "convert": 1, "ndarrai": [1, 2, 3, 4], "return": [1, 2, 3, 4, 5], "The": [1, 2, 3, 4, 5], "type": [1, 2, 3, 4], "frame": [1, 2, 3], "rate": 1, "all": [1, 2, 3, 4], "node": 1, "inform": [1, 2, 3, 4, 5], "dict": [1, 2, 5], "us": [1, 2, 3, 4, 5], "onli": 1, "feign": 1, "being": 1, "execut": 1, "enter": 1, "kei": 1, "what": 1, "might": 1, "immedi": 1, "appar": 1, "i": [1, 2, 5], "continu": 1, "stream": 1, "other": 1, "exampl": 1, "acquir": [1, 2], "when": 1, "retriev": 1, "pluck": 1, "img": [1, 2, 3, 4], "trigger_config": 1, "option": [1, 7], "none": [1, 2, 3, 4, 5, 7], "bool": [1, 2], "thi": [1, 5], "function": 1, "normal": 1, "state": 1, "turn": [1, 2], "off": [1, 2], "mode": 1, "paramet": [1, 2, 3, 4], "configur": 1, "default": 1, "whether": [1, 2], "wa": 1, "success": [1, 2], "boolean": [1, 2], "acquisition_config": 1, "acquisit": 1, "buffer_config": 1, "union": 1, "sequenc": 1, "node_nam": 1, "symbol": 1, "set": 1, "valu": 1, "name": [1, 2, 3, 4, 5], "entri": 1, "pixel_format_config": 1, "pixel": 1, "pixel_format": 1, "first": 1, "order": 1, "select": [1, 2], "sourc": 1, "onc": 1, "ha": 1, "been": 1, "enabl": 1, "which": [1, 5], "singl": 1, "upon": 1, "initi": 1, "befor": [1, 5], "process": [1, 2, 4], "includ": 1, "init": 1, "instanc": [1, 2, 3, 4], "pyspin": [1, 2], "whole": 1, "begin": 1, "pyside6": [1, 2], "qtcore": [1, 2], "qmetaobject": [1, 2], "inherit": [1, 2], "level": 1, "layer": 1, "about": [1, 2], "under": [1, 4], "categori": [1, 3, 4], "rank": 1, "ivalu": 1, "A": [1, 3, 4], "object": [1, 2, 3, 4, 6], "nodes_info_dict": 1, "node_info": 1, "correspond": 1, "cam": [1, 2], "dictionari": [1, 5], "contain": [1, 2, 3, 4], "displai": [1, 3, 4], "manipul": 1, "nodemap_dict": 1, "obtain": 2, "qobject": 2, "current_cam": 2, "scan": 2, "serial": 2, "port": 2, "host": 2, "interface_model": 2, "next": 2, "assign": [2, 4], "self": [2, 4], "5": [2, 4], "signal": 2, "signatur": 2, "qimag": 2, "6": 2, "slot": 2, "log": [2, 5], "interfac": 2, "list": [2, 3, 4], "devic": [2, 3, 4], "interface_info": 2, "cam_dict": 2, "system": 2, "access": 2, "smart": 2, "pointer": 2, "systemptr": 2, "true": 2, "otherwis": 2, "cam_nam": 2, "instanti": 2, "choic": 2, "vendor": 2, "device_model_nam": 2, "device_vendor_nam": 2, "well": 2, "queri": 2, "its": 2, "interfaceptr": 2, "defect": [2, 3, 4], "record": [2, 5], "runtim": 2, "error": 2, "variou": 2, "processor": 2, "indic": 2, "complet": 2, "procedur": 2, "load": [2, 4], "generateanchor": [3, 4], "postprocess": [3, 4], "preprocess": [3, 4], "setbackend": [3, 4], "settarget": [3, 4], "\u6b64\u5305\u7528\u4e8e\u5b9a\u4e49\u7f3a\u9677\u68c0\u6d4b\u7b97\u6cd5": 3, "result": [3, 4], "classif": [3, 4], "score": [3, 4], "path": [3, 4], "threshold": [3, 4], "filter": [3, 4], "box": [3, 4], "float": [3, 4], "non": [3, 4], "maximum": [3, 4], "suppress": [3, 4], "tupl": [3, 4], "specif": [3, 4], "comput": [3, 4, 5], "support": [3, 4], "network": [3, 4], "identifi": [3, 4], "input": [3, 4], "output": [3, 4], "static": [3, 4, 5], "srcimg": [3, 4], "target_s": [3, 4], "640": [3, 4], "scale": [3, 4], "ratio": [3, 4], "size": [3, 4], "padded_img": [3, 4], "text": [3, 4, 5], "left": [3, 4], "top": [3, 4], "textcolor": [3, 4], "255": [3, 4], "textsiz": [3, 4], "20": [3, 4], "chines": [3, 4], "charact": [3, 4], "need": [3, 4], "ad": [3, 4], "coordin": [3, 4], "color": [3, 4], "font": [3, 4], "bbox": [3, 4], "letterbox_scal": [3, 4], "det": [3, 4], "fp": [3, 4], "visual": [3, 4], "res_img": [3, 4], "modelpath": 4, "confthreshold": 4, "35": 4, "nmsthreshold": 4, "objthreshold": 4, "backendid": 4, "targetid": 4, "pre": 4, "train": 4, "onnx": 4, "make": 4, "predict": 4, "gener": 4, "anchor": 4, "each": 4, "stride": 4, "grid": 4, "number": 4, "step": [4, 5], "expanded_strid": 4, "provid": 4, "properti": 4, "attribut": [4, 5], "classnam": 4, "accord": 4, "candid": 4, "chang": 4, "dimens": 4, "blob": 4, "backenid": 4, "reset": 4, "net": 4, "setpreferablebackend": 4, "setpreferabletarget": 4, "handler": 5, "\u6240\u6709\u7684\u4fe1\u606f\u9884\u5904\u7406\u5728\u8be5\u7c7b\u4e2d\u5b8c\u6210": 5, "\u5305\u62ec": 5, "\u65f6\u95f4": 5, "\u8bb0\u5f55\u7c7b\u578b": 5, "\u6240\u5c5e\u6a21\u5757": 5, "\u8bb0\u5f55\u7ea7\u522b": 5, "\u8bb0\u5f55\u5173\u952e\u8bcd": 5, "logrecord": 5, "do": 5, "whatev": 5, "take": 5, "actual": 5, "specifi": 5, "version": 5, "intend": 5, "implement": 5, "subclass": 5, "so": 5, "rais": 5, "notimplementederror": 5, "formatt": 5, "": 5, "operand": 5, "string": 5, "oper": 5, "yield": 5, "coupl": 5, "preparatori": 5, "ar": 5, "carri": 5, "out": 5, "messag": 5, "getmessag": 5, "If": 5, "time": 5, "determin": 5, "call": 5, "usestim": 5, "formattim": 5, "event": 5, "except": 5, "formatexcept": 5, "append": 5, "msg": 5, "\u6b64\u6587\u4ef6\u7528\u4e8e\u56fe\u50cf\u9884\u5904\u7406": 6, "cl": 7, "defectdetector": [8, 9], "packag": [8, 9], "subpackag": [8, 9], "modul": [8, 9], "index": 8, "search": 8, "page": 8, "content": 9}, "objects": {"": [[0, 0, 0, "-", "defectdetector"]], "defectdetector": [[1, 0, 0, "-", "camera"], [2, 0, 0, "-", "controller"], [3, 0, 0, "-", "detector"], [5, 0, 0, "-", "logger"], [6, 0, 0, "-", "transforms"], [7, 0, 0, "-", "utils"]], "defectdetector.camera": [[1, 1, 1, "", "Camera"], [1, 0, 0, "-", "camera"], [1, 0, 0, "-", "nodemap"]], "defectdetector.camera.Camera": [[1, 2, 1, "", "TriggerType"], [1, 3, 1, "", "capture"], [1, 3, 1, "", "get_fps"], [1, 3, 1, "", "get_node_map"], [1, 3, 1, "", "grab_next_image_by_trigger"], [1, 3, 1, "", "reset_trigger"], [1, 3, 1, "", "set_acquisition"], [1, 3, 1, "", "set_buffer"], [1, 3, 1, "", "set_node"], [1, 3, 1, "", "set_pixel_format"], [1, 3, 1, "", "set_trigger"], [1, 3, 1, "", "setup_cap"], [1, 2, 1, "", "staticMetaObject"], [1, 3, 1, "", "stop"]], "defectdetector.camera.camera": [[1, 1, 1, "", "Camera"]], "defectdetector.camera.camera.Camera": [[1, 2, 1, "", "TriggerType"], [1, 3, 1, "", "capture"], [1, 3, 1, "", "get_fps"], [1, 3, 1, "", "get_node_map"], [1, 3, 1, "", "grab_next_image_by_trigger"], [1, 3, 1, "", "reset_trigger"], [1, 3, 1, "", "set_acquisition"], [1, 3, 1, "", "set_buffer"], [1, 3, 1, "", "set_node"], [1, 3, 1, "", "set_pixel_format"], [1, 3, 1, "", "set_trigger"], [1, 3, 1, "", "setup_cap"], [1, 2, 1, "", "staticMetaObject"], [1, 3, 1, "", "stop"]], "defectdetector.camera.nodemap": [[1, 4, 1, "", "get_category_node_and_all_feature"], [1, 4, 1, "", "get_enumeration_node_and_current_entry"], [1, 4, 1, "", "get_node_info"], [1, 4, 1, "", "get_whole_nodemap"]], "defectdetector.controller": [[2, 1, 1, "", "Controller"], [2, 1, 1, "", "Enumeration"], [2, 0, 0, "-", "controller"], [2, 0, 0, "-", "enumration"], [2, 0, 0, "-", "pipeline"]], "defectdetector.controller.Controller": [[2, 3, 1, "", "get_cam"], [2, 3, 1, "", "get_frame"], [2, 3, 1, "", "get_interface_model"], [2, 3, 1, "", "grab_next_image_by_trigger"], [2, 3, 1, "", "select_camera"], [2, 2, 1, "", "staticMetaObject"], [2, 3, 1, "", "stop"], [2, 2, 1, "", "update_frame"]], "defectdetector.controller.Enumeration": [[2, 3, 1, "", "call_interface"], [2, 3, 1, "", "create_camera_instance"], [2, 3, 1, "", "get_cam_name"], [2, 3, 1, "", "get_interface_info"], [2, 3, 1, "", "query_interface"]], "defectdetector.controller.controller": [[2, 1, 1, "", "Buffer"], [2, 1, 1, "", "Controller"]], "defectdetector.controller.controller.Buffer": [[2, 2, 1, "", "data_list"], [2, 3, 1, "", "pop"], [2, 3, 1, "", "push"]], "defectdetector.controller.controller.Controller": [[2, 3, 1, "", "get_cam"], [2, 3, 1, "", "get_frame"], [2, 3, 1, "", "get_interface_model"], [2, 3, 1, "", "grab_next_image_by_trigger"], [2, 3, 1, "", "select_camera"], [2, 2, 1, "", "staticMetaObject"], [2, 3, 1, "", "stop"], [2, 2, 1, "", "update_frame"]], "defectdetector.controller.enumration": [[2, 1, 1, "", "Enumeration"]], "defectdetector.controller.enumration.Enumeration": [[2, 3, 1, "", "call_interface"], [2, 3, 1, "", "create_camera_instance"], [2, 3, 1, "", "get_cam_name"], [2, 3, 1, "", "get_interface_info"], [2, 3, 1, "", "query_interface"]], "defectdetector.controller.pipeline": [[2, 1, 1, "", "Pipeline"]], "defectdetector.controller.pipeline.Pipeline": [[2, 3, 1, "", "add"], [2, 3, 1, "", "remove"], [2, 3, 1, "", "run"], [2, 3, 1, "", "setup"]], "defectdetector.detector": [[3, 1, 1, "", "Detector"], [3, 1, 1, "", "YoloxDetector"], [3, 0, 0, "-", "base"], [4, 0, 0, "-", "yolox"]], "defectdetector.detector.Detector": [[3, 3, 1, "", "detect"]], "defectdetector.detector.YoloxDetector": [[3, 2, 1, "", "backends"], [3, 2, 1, "", "classes"], [3, 2, 1, "", "confidence"], [3, 3, 1, "", "detect"], [3, 3, 1, "", "letterbox"], [3, 2, 1, "", "model"], [3, 2, 1, "", "model_net"], [3, 2, 1, "", "nms"], [3, 3, 1, "", "paint_chinese_opencv"], [3, 2, 1, "", "targets"], [3, 3, 1, "", "unletterbox"], [3, 3, 1, "", "vis"]], "defectdetector.detector.base": [[3, 1, 1, "", "Detector"]], "defectdetector.detector.base.Detector": [[3, 3, 1, "", "detect"]], "defectdetector.detector.yolox": [[4, 1, 1, "", "YoloX"], [4, 1, 1, "", "YoloxDetector"], [4, 0, 0, "-", "inference"], [4, 0, 0, "-", "yolox"]], "defectdetector.detector.yolox.YoloX": [[4, 3, 1, "", "generateAnchors"], [4, 3, 1, "", "infer"], [4, 5, 1, "", "name"], [4, 3, 1, "", "postprocess"], [4, 3, 1, "", "preprocess"], [4, 3, 1, "", "setBackend"], [4, 3, 1, "", "setTarget"]], "defectdetector.detector.yolox.YoloxDetector": [[4, 2, 1, "", "backends"], [4, 2, 1, "", "classes"], [4, 2, 1, "", "confidence"], [4, 3, 1, "", "detect"], [4, 3, 1, "", "letterbox"], [4, 2, 1, "", "model"], [4, 2, 1, "", "model_net"], [4, 2, 1, "", "nms"], [4, 3, 1, "", "paint_chinese_opencv"], [4, 2, 1, "", "targets"], [4, 3, 1, "", "unletterbox"], [4, 3, 1, "", "vis"]], "defectdetector.detector.yolox.inference": [[4, 1, 1, "", "YoloxDetector"]], "defectdetector.detector.yolox.inference.YoloxDetector": [[4, 2, 1, "", "backends"], [4, 2, 1, "", "classes"], [4, 2, 1, "", "confidence"], [4, 3, 1, "", "detect"], [4, 3, 1, "", "letterbox"], [4, 2, 1, "", "model"], [4, 2, 1, "", "model_net"], [4, 2, 1, "", "nms"], [4, 3, 1, "", "paint_chinese_opencv"], [4, 2, 1, "", "targets"], [4, 3, 1, "", "unletterbox"], [4, 3, 1, "", "vis"]], "defectdetector.detector.yolox.yolox": [[4, 1, 1, "", "YoloX"]], "defectdetector.detector.yolox.yolox.YoloX": [[4, 3, 1, "", "generateAnchors"], [4, 3, 1, "", "infer"], [4, 5, 1, "", "name"], [4, 3, 1, "", "postprocess"], [4, 3, 1, "", "preprocess"], [4, 3, 1, "", "setBackend"], [4, 3, 1, "", "setTarget"]], "defectdetector.logger": [[5, 1, 1, "", "BaseLogHandler"], [5, 0, 0, "-", "detect_statistic"], [5, 0, 0, "-", "logger"], [5, 0, 0, "-", "record_buffer"]], "defectdetector.logger.BaseLogHandler": [[5, 3, 1, "", "emit"]], "defectdetector.logger.logger": [[5, 1, 1, "", "BaseLogHandler"], [5, 1, 1, "", "DetectFormatter"]], "defectdetector.logger.logger.BaseLogHandler": [[5, 3, 1, "", "emit"]], "defectdetector.logger.logger.DetectFormatter": [[5, 3, 1, "", "format"], [5, 3, 1, "", "time_format"], [5, 3, 1, "", "translate"]], "defectdetector.transforms": [[6, 1, 1, "", "BaseTransform"], [6, 1, 1, "", "Transforms"], [6, 0, 0, "-", "base"], [6, 0, 0, "-", "demosaicking"], [6, 0, 0, "-", "resize"]], "defectdetector.transforms.Transforms": [[6, 2, 1, "", "METHOD"]], "defectdetector.transforms.base": [[6, 1, 1, "", "BaseTransform"]], "defectdetector.transforms.resize": [[6, 1, 1, "", "ConvertColorspace"], [6, 1, 1, "", "Resize"]], "defectdetector.utils": [[7, 4, 1, "", "load_config"], [7, 0, 0, "-", "load_config"], [7, 0, 0, "-", "manager"], [7, 4, 1, "", "save_config"], [7, 4, 1, "", "singleton"]], "defectdetector.utils.load_config": [[7, 4, 1, "", "load_config"], [7, 4, 1, "", "save_config"]], "defectdetector.utils.manager": [[7, 4, 1, "", "singleton"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"defectdetector": [0, 1, 2, 3, 4, 5, 6, 7], "packag": [0, 1, 2, 3, 4, 5, 6, 7], "subpackag": [0, 3], "modul": [0, 1, 2, 3, 4, 5, 6, 7], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8], "camera": 1, "submodul": [1, 2, 3, 4, 5, 6, 7], "nodemap": 1, "control": 2, "enumr": 2, "pipelin": 2, "detector": [3, 4], "base": [3, 6], "yolox": 4, "infer": 4, "logger": 5, "detect_statist": 5, "record_buff": 5, "transform": 6, "demosaick": 6, "resiz": 6, "util": 7, "load_config": 7, "manag": 7, "welcom": 8, "polarization_defect_detect": 8, "": 8, "document": 8, "indic": 8, "tabl": 8, "polar": 9, "defect": 9, "detect": 9}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"defectdetector package": [[0, "defectdetector-package"]], "Subpackages": [[0, "subpackages"], [3, "subpackages"]], "Module contents": [[0, "module-defectdetector"], [1, "module-defectdetector.camera"], [2, "module-defectdetector.controller"], [3, "module-defectdetector.detector"], [4, "module-defectdetector.detector.yolox"], [5, "module-defectdetector.logger"], [6, "module-defectdetector.transforms"], [7, "module-defectdetector.utils"]], "defectdetector.camera package": [[1, "defectdetector-camera-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"]], "defectdetector.camera.camera module": [[1, "module-defectdetector.camera.camera"]], "defectdetector.camera.nodemap module": [[1, "module-defectdetector.camera.nodemap"]], "defectdetector.controller package": [[2, "defectdetector-controller-package"]], "defectdetector.controller.controller module": [[2, "module-defectdetector.controller.controller"]], "defectdetector.controller.enumration module": [[2, "module-defectdetector.controller.enumration"]], "defectdetector.controller.pipeline module": [[2, "module-defectdetector.controller.pipeline"]], "defectdetector.detector package": [[3, "defectdetector-detector-package"]], "defectdetector.detector.base module": [[3, "module-defectdetector.detector.base"]], "defectdetector.detector.yolox package": [[4, "defectdetector-detector-yolox-package"]], "defectdetector.detector.yolox.inference module": [[4, "module-defectdetector.detector.yolox.inference"]], "defectdetector.detector.yolox.yolox module": [[4, "module-defectdetector.detector.yolox.yolox"]], "defectdetector.logger package": [[5, "defectdetector-logger-package"]], "defectdetector.logger.detect_statistic module": [[5, "module-defectdetector.logger.detect_statistic"]], "defectdetector.logger.logger module": [[5, "module-defectdetector.logger.logger"]], "defectdetector.logger.record_buffer module": [[5, "module-defectdetector.logger.record_buffer"]], "defectdetector.transforms package": [[6, "defectdetector-transforms-package"]], "defectdetector.transforms.base module": [[6, "module-defectdetector.transforms.base"]], "defectdetector.transforms.demosaicking module": [[6, "module-defectdetector.transforms.demosaicking"]], "defectdetector.transforms.resize module": [[6, "module-defectdetector.transforms.resize"]], "defectdetector.utils package": [[7, "defectdetector-utils-package"]], "defectdetector.utils.load_config module": [[7, "module-defectdetector.utils.load_config"]], "defectdetector.utils.manager module": [[7, "module-defectdetector.utils.manager"]], "Welcome to Polarization_Defect_Detection's documentation!": [[8, "welcome-to-polarization-defect-detection-s-documentation"]], "Contents:": [[8, null]], "Indices and tables": [[8, "indices-and-tables"]], "Polarization-Defect-Detection": [[9, "polarization-defect-detection"]]}, "indexentries": {"defectdetector": [[0, "module-defectdetector"]], "module": [[0, "module-defectdetector"], [1, "module-defectdetector.camera"], [1, "module-defectdetector.camera.camera"], [1, "module-defectdetector.camera.nodemap"], [2, "module-defectdetector.controller"], [2, "module-defectdetector.controller.controller"], [2, "module-defectdetector.controller.enumration"], [2, "module-defectdetector.controller.pipeline"], [3, "module-defectdetector.detector"], [3, "module-defectdetector.detector.base"], [4, "module-defectdetector.detector.yolox"], [4, "module-defectdetector.detector.yolox.inference"], [4, "module-defectdetector.detector.yolox.yolox"], [5, "module-defectdetector.logger"], [5, "module-defectdetector.logger.detect_statistic"], [5, "module-defectdetector.logger.logger"], [5, "module-defectdetector.logger.record_buffer"], [6, "module-defectdetector.transforms"], [6, "module-defectdetector.transforms.base"], [6, "module-defectdetector.transforms.demosaicking"], [6, "module-defectdetector.transforms.resize"], [7, "module-defectdetector.utils"], [7, "module-defectdetector.utils.load_config"], [7, "module-defectdetector.utils.manager"]], "camera (class in defectdetector.camera)": [[1, "defectdetector.camera.Camera"]], "camera (class in defectdetector.camera.camera)": [[1, "defectdetector.camera.camera.Camera"]], "triggertype (defectdetector.camera.camera attribute)": [[1, "defectdetector.camera.Camera.TriggerType"]], "triggertype (defectdetector.camera.camera.camera attribute)": [[1, "defectdetector.camera.camera.Camera.TriggerType"]], "capture() (defectdetector.camera.camera method)": [[1, "defectdetector.camera.Camera.capture"]], "capture() (defectdetector.camera.camera.camera method)": [[1, "defectdetector.camera.camera.Camera.capture"]], "defectdetector.camera": [[1, "module-defectdetector.camera"]], "defectdetector.camera.camera": [[1, "module-defectdetector.camera.camera"]], "defectdetector.camera.nodemap": [[1, "module-defectdetector.camera.nodemap"]], "get_category_node_and_all_feature() (in module defectdetector.camera.nodemap)": [[1, "defectdetector.camera.nodemap.get_category_node_and_all_feature"]], "get_enumeration_node_and_current_entry() (in module defectdetector.camera.nodemap)": [[1, "defectdetector.camera.nodemap.get_enumeration_node_and_current_entry"]], "get_fps() (defectdetector.camera.camera method)": [[1, "defectdetector.camera.Camera.get_fps"]], "get_fps() (defectdetector.camera.camera.camera method)": [[1, "defectdetector.camera.camera.Camera.get_fps"]], "get_node_info() (in module defectdetector.camera.nodemap)": [[1, "defectdetector.camera.nodemap.get_node_info"]], "get_node_map() (defectdetector.camera.camera method)": [[1, "defectdetector.camera.Camera.get_node_map"]], "get_node_map() (defectdetector.camera.camera.camera method)": [[1, "defectdetector.camera.camera.Camera.get_node_map"]], "get_whole_nodemap() (in module defectdetector.camera.nodemap)": [[1, "defectdetector.camera.nodemap.get_whole_nodemap"]], "grab_next_image_by_trigger() (defectdetector.camera.camera method)": [[1, "defectdetector.camera.Camera.grab_next_image_by_trigger"]], "grab_next_image_by_trigger() (defectdetector.camera.camera.camera method)": [[1, "defectdetector.camera.camera.Camera.grab_next_image_by_trigger"]], "reset_trigger() (defectdetector.camera.camera method)": [[1, "defectdetector.camera.Camera.reset_trigger"]], "reset_trigger() (defectdetector.camera.camera.camera method)": [[1, "defectdetector.camera.camera.Camera.reset_trigger"]], "set_acquisition() (defectdetector.camera.camera method)": [[1, "defectdetector.camera.Camera.set_acquisition"]], "set_acquisition() (defectdetector.camera.camera.camera method)": [[1, "defectdetector.camera.camera.Camera.set_acquisition"]], "set_buffer() (defectdetector.camera.camera method)": [[1, "defectdetector.camera.Camera.set_buffer"]], "set_buffer() (defectdetector.camera.camera.camera method)": [[1, "defectdetector.camera.camera.Camera.set_buffer"]], "set_node() (defectdetector.camera.camera method)": [[1, "defectdetector.camera.Camera.set_node"]], "set_node() (defectdetector.camera.camera.camera method)": [[1, "defectdetector.camera.camera.Camera.set_node"]], "set_pixel_format() (defectdetector.camera.camera method)": [[1, "defectdetector.camera.Camera.set_pixel_format"]], "set_pixel_format() (defectdetector.camera.camera.camera method)": [[1, "defectdetector.camera.camera.Camera.set_pixel_format"]], "set_trigger() (defectdetector.camera.camera method)": [[1, "defectdetector.camera.Camera.set_trigger"]], "set_trigger() (defectdetector.camera.camera.camera method)": [[1, "defectdetector.camera.camera.Camera.set_trigger"]], "setup_cap() (defectdetector.camera.camera method)": [[1, "defectdetector.camera.Camera.setup_cap"]], "setup_cap() (defectdetector.camera.camera.camera method)": [[1, "defectdetector.camera.camera.Camera.setup_cap"]], "staticmetaobject (defectdetector.camera.camera attribute)": [[1, "defectdetector.camera.Camera.staticMetaObject"]], "staticmetaobject (defectdetector.camera.camera.camera attribute)": [[1, "defectdetector.camera.camera.Camera.staticMetaObject"]], "stop() (defectdetector.camera.camera method)": [[1, "defectdetector.camera.Camera.stop"]], "stop() (defectdetector.camera.camera.camera method)": [[1, "defectdetector.camera.camera.Camera.stop"]], "buffer (class in defectdetector.controller.controller)": [[2, "defectdetector.controller.controller.Buffer"]], "controller (class in defectdetector.controller)": [[2, "defectdetector.controller.Controller"]], "controller (class in defectdetector.controller.controller)": [[2, "defectdetector.controller.controller.Controller"]], "enumeration (class in defectdetector.controller)": [[2, "defectdetector.controller.Enumeration"]], "enumeration (class in defectdetector.controller.enumration)": [[2, "defectdetector.controller.enumration.Enumeration"]], "pipeline (class in defectdetector.controller.pipeline)": [[2, "defectdetector.controller.pipeline.Pipeline"]], "add() (defectdetector.controller.pipeline.pipeline method)": [[2, "defectdetector.controller.pipeline.Pipeline.add"]], "call_interface() (defectdetector.controller.enumeration method)": [[2, "defectdetector.controller.Enumeration.call_interface"]], "call_interface() (defectdetector.controller.enumration.enumeration method)": [[2, "defectdetector.controller.enumration.Enumeration.call_interface"]], "create_camera_instance() (defectdetector.controller.enumeration method)": [[2, "defectdetector.controller.Enumeration.create_camera_instance"]], "create_camera_instance() (defectdetector.controller.enumration.enumeration method)": [[2, "defectdetector.controller.enumration.Enumeration.create_camera_instance"]], "data_list (defectdetector.controller.controller.buffer attribute)": [[2, "defectdetector.controller.controller.Buffer.data_list"]], "defectdetector.controller": [[2, "module-defectdetector.controller"]], "defectdetector.controller.controller": [[2, "module-defectdetector.controller.controller"]], "defectdetector.controller.enumration": [[2, "module-defectdetector.controller.enumration"]], "defectdetector.controller.pipeline": [[2, "module-defectdetector.controller.pipeline"]], "get_cam() (defectdetector.controller.controller method)": [[2, "defectdetector.controller.Controller.get_cam"]], "get_cam() (defectdetector.controller.controller.controller method)": [[2, "defectdetector.controller.controller.Controller.get_cam"]], "get_cam_name() (defectdetector.controller.enumeration method)": [[2, "defectdetector.controller.Enumeration.get_cam_name"]], "get_cam_name() (defectdetector.controller.enumration.enumeration method)": [[2, "defectdetector.controller.enumration.Enumeration.get_cam_name"]], "get_frame() (defectdetector.controller.controller method)": [[2, "defectdetector.controller.Controller.get_frame"]], "get_frame() (defectdetector.controller.controller.controller method)": [[2, "defectdetector.controller.controller.Controller.get_frame"]], "get_interface_info() (defectdetector.controller.enumeration method)": [[2, "defectdetector.controller.Enumeration.get_interface_info"]], "get_interface_info() (defectdetector.controller.enumration.enumeration method)": [[2, "defectdetector.controller.enumration.Enumeration.get_interface_info"]], "get_interface_model() (defectdetector.controller.controller method)": [[2, "defectdetector.controller.Controller.get_interface_model"]], "get_interface_model() (defectdetector.controller.controller.controller method)": [[2, "defectdetector.controller.controller.Controller.get_interface_model"]], "grab_next_image_by_trigger() (defectdetector.controller.controller method)": [[2, "defectdetector.controller.Controller.grab_next_image_by_trigger"]], "grab_next_image_by_trigger() (defectdetector.controller.controller.controller method)": [[2, "defectdetector.controller.controller.Controller.grab_next_image_by_trigger"]], "pop() (defectdetector.controller.controller.buffer method)": [[2, "defectdetector.controller.controller.Buffer.pop"]], "push() (defectdetector.controller.controller.buffer method)": [[2, "defectdetector.controller.controller.Buffer.push"]], "query_interface() (defectdetector.controller.enumeration method)": [[2, "defectdetector.controller.Enumeration.query_interface"]], "query_interface() (defectdetector.controller.enumration.enumeration method)": [[2, "defectdetector.controller.enumration.Enumeration.query_interface"]], "remove() (defectdetector.controller.pipeline.pipeline method)": [[2, "defectdetector.controller.pipeline.Pipeline.remove"]], "run() (defectdetector.controller.pipeline.pipeline method)": [[2, "defectdetector.controller.pipeline.Pipeline.run"]], "select_camera() (defectdetector.controller.controller method)": [[2, "defectdetector.controller.Controller.select_camera"]], "select_camera() (defectdetector.controller.controller.controller method)": [[2, "defectdetector.controller.controller.Controller.select_camera"]], "setup() (defectdetector.controller.pipeline.pipeline method)": [[2, "defectdetector.controller.pipeline.Pipeline.setup"]], "staticmetaobject (defectdetector.controller.controller attribute)": [[2, "defectdetector.controller.Controller.staticMetaObject"]], "staticmetaobject (defectdetector.controller.controller.controller attribute)": [[2, "defectdetector.controller.controller.Controller.staticMetaObject"]], "stop() (defectdetector.controller.controller method)": [[2, "defectdetector.controller.Controller.stop"]], "stop() (defectdetector.controller.controller.controller method)": [[2, "defectdetector.controller.controller.Controller.stop"]], "update_frame (defectdetector.controller.controller attribute)": [[2, "defectdetector.controller.Controller.update_frame"]], "update_frame (defectdetector.controller.controller.controller attribute)": [[2, "defectdetector.controller.controller.Controller.update_frame"]], "detector (class in defectdetector.detector)": [[3, "defectdetector.detector.Detector"]], "detector (class in defectdetector.detector.base)": [[3, "defectdetector.detector.base.Detector"]], "yoloxdetector (class in defectdetector.detector)": [[3, "defectdetector.detector.YoloxDetector"]], "backends (defectdetector.detector.yoloxdetector attribute)": [[3, "defectdetector.detector.YoloxDetector.backends"]], "classes (defectdetector.detector.yoloxdetector attribute)": [[3, "defectdetector.detector.YoloxDetector.classes"]], "confidence (defectdetector.detector.yoloxdetector attribute)": [[3, "defectdetector.detector.YoloxDetector.confidence"]], "defectdetector.detector": [[3, "module-defectdetector.detector"]], "defectdetector.detector.base": [[3, "module-defectdetector.detector.base"]], "detect() (defectdetector.detector.detector method)": [[3, "defectdetector.detector.Detector.detect"]], "detect() (defectdetector.detector.yoloxdetector method)": [[3, "defectdetector.detector.YoloxDetector.detect"]], "detect() (defectdetector.detector.base.detector method)": [[3, "defectdetector.detector.base.Detector.detect"]], "letterbox() (defectdetector.detector.yoloxdetector static method)": [[3, "defectdetector.detector.YoloxDetector.letterbox"]], "model (defectdetector.detector.yoloxdetector attribute)": [[3, "defectdetector.detector.YoloxDetector.model"]], "model_net (defectdetector.detector.yoloxdetector attribute)": [[3, "defectdetector.detector.YoloxDetector.model_net"]], "nms (defectdetector.detector.yoloxdetector attribute)": [[3, "defectdetector.detector.YoloxDetector.nms"]], "paint_chinese_opencv() (defectdetector.detector.yoloxdetector static method)": [[3, "defectdetector.detector.YoloxDetector.paint_chinese_opencv"]], "targets (defectdetector.detector.yoloxdetector attribute)": [[3, "defectdetector.detector.YoloxDetector.targets"]], "unletterbox() (defectdetector.detector.yoloxdetector static method)": [[3, "defectdetector.detector.YoloxDetector.unletterbox"]], "vis() (defectdetector.detector.yoloxdetector method)": [[3, "defectdetector.detector.YoloxDetector.vis"]], "yolox (class in defectdetector.detector.yolox)": [[4, "defectdetector.detector.yolox.YoloX"]], "yolox (class in defectdetector.detector.yolox.yolox)": [[4, "defectdetector.detector.yolox.yolox.YoloX"]], "yoloxdetector (class in defectdetector.detector.yolox)": [[4, "defectdetector.detector.yolox.YoloxDetector"]], "yoloxdetector (class in defectdetector.detector.yolox.inference)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector"]], "backends (defectdetector.detector.yolox.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.YoloxDetector.backends"]], "backends (defectdetector.detector.yolox.inference.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector.backends"]], "classes (defectdetector.detector.yolox.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.YoloxDetector.classes"]], "classes (defectdetector.detector.yolox.inference.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector.classes"]], "confidence (defectdetector.detector.yolox.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.YoloxDetector.confidence"]], "confidence (defectdetector.detector.yolox.inference.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector.confidence"]], "defectdetector.detector.yolox": [[4, "module-defectdetector.detector.yolox"]], "defectdetector.detector.yolox.inference": [[4, "module-defectdetector.detector.yolox.inference"]], "defectdetector.detector.yolox.yolox": [[4, "module-defectdetector.detector.yolox.yolox"]], "detect() (defectdetector.detector.yolox.yoloxdetector method)": [[4, "defectdetector.detector.yolox.YoloxDetector.detect"]], "detect() (defectdetector.detector.yolox.inference.yoloxdetector method)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector.detect"]], "generateanchors() (defectdetector.detector.yolox.yolox method)": [[4, "defectdetector.detector.yolox.YoloX.generateAnchors"]], "generateanchors() (defectdetector.detector.yolox.yolox.yolox method)": [[4, "defectdetector.detector.yolox.yolox.YoloX.generateAnchors"]], "infer() (defectdetector.detector.yolox.yolox method)": [[4, "defectdetector.detector.yolox.YoloX.infer"]], "infer() (defectdetector.detector.yolox.yolox.yolox method)": [[4, "defectdetector.detector.yolox.yolox.YoloX.infer"]], "letterbox() (defectdetector.detector.yolox.yoloxdetector static method)": [[4, "defectdetector.detector.yolox.YoloxDetector.letterbox"]], "letterbox() (defectdetector.detector.yolox.inference.yoloxdetector static method)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector.letterbox"]], "model (defectdetector.detector.yolox.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.YoloxDetector.model"]], "model (defectdetector.detector.yolox.inference.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector.model"]], "model_net (defectdetector.detector.yolox.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.YoloxDetector.model_net"]], "model_net (defectdetector.detector.yolox.inference.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector.model_net"]], "name (defectdetector.detector.yolox.yolox property)": [[4, "defectdetector.detector.yolox.YoloX.name"]], "name (defectdetector.detector.yolox.yolox.yolox property)": [[4, "defectdetector.detector.yolox.yolox.YoloX.name"]], "nms (defectdetector.detector.yolox.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.YoloxDetector.nms"]], "nms (defectdetector.detector.yolox.inference.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector.nms"]], "paint_chinese_opencv() (defectdetector.detector.yolox.yoloxdetector static method)": [[4, "defectdetector.detector.yolox.YoloxDetector.paint_chinese_opencv"]], "paint_chinese_opencv() (defectdetector.detector.yolox.inference.yoloxdetector static method)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector.paint_chinese_opencv"]], "postprocess() (defectdetector.detector.yolox.yolox method)": [[4, "defectdetector.detector.yolox.YoloX.postprocess"]], "postprocess() (defectdetector.detector.yolox.yolox.yolox method)": [[4, "defectdetector.detector.yolox.yolox.YoloX.postprocess"]], "preprocess() (defectdetector.detector.yolox.yolox method)": [[4, "defectdetector.detector.yolox.YoloX.preprocess"]], "preprocess() (defectdetector.detector.yolox.yolox.yolox method)": [[4, "defectdetector.detector.yolox.yolox.YoloX.preprocess"]], "setbackend() (defectdetector.detector.yolox.yolox method)": [[4, "defectdetector.detector.yolox.YoloX.setBackend"]], "setbackend() (defectdetector.detector.yolox.yolox.yolox method)": [[4, "defectdetector.detector.yolox.yolox.YoloX.setBackend"]], "settarget() (defectdetector.detector.yolox.yolox method)": [[4, "defectdetector.detector.yolox.YoloX.setTarget"]], "settarget() (defectdetector.detector.yolox.yolox.yolox method)": [[4, "defectdetector.detector.yolox.yolox.YoloX.setTarget"]], "targets (defectdetector.detector.yolox.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.YoloxDetector.targets"]], "targets (defectdetector.detector.yolox.inference.yoloxdetector attribute)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector.targets"]], "unletterbox() (defectdetector.detector.yolox.yoloxdetector static method)": [[4, "defectdetector.detector.yolox.YoloxDetector.unletterbox"]], "unletterbox() (defectdetector.detector.yolox.inference.yoloxdetector static method)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector.unletterbox"]], "vis() (defectdetector.detector.yolox.yoloxdetector method)": [[4, "defectdetector.detector.yolox.YoloxDetector.vis"]], "vis() (defectdetector.detector.yolox.inference.yoloxdetector method)": [[4, "defectdetector.detector.yolox.inference.YoloxDetector.vis"]], "baseloghandler (class in defectdetector.logger)": [[5, "defectdetector.logger.BaseLogHandler"]], "baseloghandler (class in defectdetector.logger.logger)": [[5, "defectdetector.logger.logger.BaseLogHandler"]], "detectformatter (class in defectdetector.logger.logger)": [[5, "defectdetector.logger.logger.DetectFormatter"]], "defectdetector.logger": [[5, "module-defectdetector.logger"]], "defectdetector.logger.detect_statistic": [[5, "module-defectdetector.logger.detect_statistic"]], "defectdetector.logger.logger": [[5, "module-defectdetector.logger.logger"]], "defectdetector.logger.record_buffer": [[5, "module-defectdetector.logger.record_buffer"]], "emit() (defectdetector.logger.baseloghandler method)": [[5, "defectdetector.logger.BaseLogHandler.emit"]], "emit() (defectdetector.logger.logger.baseloghandler method)": [[5, "defectdetector.logger.logger.BaseLogHandler.emit"]], "format() (defectdetector.logger.logger.detectformatter method)": [[5, "defectdetector.logger.logger.DetectFormatter.format"]], "time_format() (defectdetector.logger.logger.detectformatter static method)": [[5, "defectdetector.logger.logger.DetectFormatter.time_format"]], "translate() (defectdetector.logger.logger.detectformatter static method)": [[5, "defectdetector.logger.logger.DetectFormatter.translate"]], "basetransform (class in defectdetector.transforms)": [[6, "defectdetector.transforms.BaseTransform"]], "basetransform (class in defectdetector.transforms.base)": [[6, "defectdetector.transforms.base.BaseTransform"]], "convertcolorspace (class in defectdetector.transforms.resize)": [[6, "defectdetector.transforms.resize.ConvertColorspace"]], "method (defectdetector.transforms.transforms attribute)": [[6, "defectdetector.transforms.Transforms.METHOD"]], "resize (class in defectdetector.transforms.resize)": [[6, "defectdetector.transforms.resize.Resize"]], "transforms (class in defectdetector.transforms)": [[6, "defectdetector.transforms.Transforms"]], "defectdetector.transforms": [[6, "module-defectdetector.transforms"]], "defectdetector.transforms.base": [[6, "module-defectdetector.transforms.base"]], "defectdetector.transforms.demosaicking": [[6, "module-defectdetector.transforms.demosaicking"]], "defectdetector.transforms.resize": [[6, "module-defectdetector.transforms.resize"]], "defectdetector.utils": [[7, "module-defectdetector.utils"]], "defectdetector.utils.load_config": [[7, "module-defectdetector.utils.load_config"]], "defectdetector.utils.manager": [[7, "module-defectdetector.utils.manager"]], "load_config() (in module defectdetector.utils)": [[7, "defectdetector.utils.load_config"]], "load_config() (in module defectdetector.utils.load_config)": [[7, "defectdetector.utils.load_config.load_config"]], "save_config() (in module defectdetector.utils)": [[7, "defectdetector.utils.save_config"]], "save_config() (in module defectdetector.utils.load_config)": [[7, "defectdetector.utils.load_config.save_config"]], "singleton() (in module defectdetector.utils)": [[7, "defectdetector.utils.singleton"]], "singleton() (in module defectdetector.utils.manager)": [[7, "defectdetector.utils.manager.singleton"]]}})